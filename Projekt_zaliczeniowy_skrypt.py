import arcpy
from arcpy.sa import *

def FunkcjaZaliczenie():
    arcpy.CheckOutExtension("spatial")
    arcpy.CheckOutExtension("ImageAnalyst")
    arcpy.CheckOutExtension("3D")

    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")

    #Granice powiatów województwa opolskiego pobrane z Geoportalu
    A02_Granice_powiatow = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\16_GraniceAdministracyjne\A02_Granice_powiatow.shp"

    #Kolejne warsty reprezentujace pokrycie terenu pobrane z Geoportalu
    PL_PZGiK_1833_BDOT10k_16_OT_PTGN_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTGN_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTKM_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTKM_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTLZ_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTLZ_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTNZ_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTNZ_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTPL_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTPL_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTRK_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTRK_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTSO_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTSO_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTTR_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTTR_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTUT_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTUT_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTWP_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTWP_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTWZ_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTWZ_A.shp"
    PL_PZGiK_1833_BDOT10k_16_OT_PTZB_A = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\bdot\Pokrycie_terenu\PL_PZGiK_1833_BDOT10k_16__OT_PTZB_A.shp"

    #NMT dla analizowanego obszaru pobrany z Geoportalu
    opole_tif = arcpy.Raster(r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\rastry\nmt\opole.tif")

    #2 warstwy rastrowe (dane LIDAR) odnośnie temperatury powierzchni pobrane ze strony landsatu
    LC08_L2SP_190025_20240920_20240927_02_T1_ST_B10_TIF = arcpy.Raster(r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\landsat_nizej\LC08_L2SP_190025_20240920_20240927_02_T1_ST_B10.TIF")
    LC08_L2SP_189025_20241202_20241209_02_T1_ST_B10_TIF = arcpy.Raster(r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\landsat_nizej\LC08_L2SP_189025_20241202_20241209_02_T1_ST_B10.TIF")

    #Geobaza w której będą zapisywane dane
    ProgramowanieGIS_gdb = r"E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb"

    #Linie wysokiego napięcia (do nich najczęściej podłączone są farmy paneli słonecznych) pobrane ze strony GIS Support-a
    linia_elektroenergetyczna_wysokiego_napiecia = r"E:\ProgramowanieGIS\projekt_zaliczeniowy\dane\linie_wysokiego_napiecia\linia_elektroenergetyczna_wysokiego_napiecia.shp"

    #Utworzenie warstwy reprezentującej granice badanego obszaru
    #Najpierw należy wyodrębnić granice samego obszaru powiatu Opole i powiatu opolskiego, ponieważ farma musi się znajdować w ich granicach
    granice_powiatu_opolskiego_i_opole = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_opolskiego_i_opole"
    arcpy.conversion.ExportFeatures(in_features=A02_Granice_powiatow, out_features=granice_powiatu_opolskiego_i_opole, where_clause="JPT_NAZWA_ = 'powiat Opole' Or JPT_NAZWA_ = 'powiat opolski'", field_mapping="Shape_Leng \"Shape_Leng\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,Shape_Leng,-1,-1;Shape_Area \"Shape_Area\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,Shape_Area,-1,-1;JPT_SJR_KO \"JPT_SJR_KO\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_SJR_KO,0,2;JPT_POWIER \"JPT_POWIER\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,JPT_POWIER,-1,-1;JPT_KOD_JE \"JPT_KOD_JE\" true true false 20 Text 0 0,First,#,A02_Granice_powiatow,JPT_KOD_JE,0,19;JPT_NAZWA_ \"JPT_NAZWA_\" true true false 128 Text 0 0,First,#,A02_Granice_powiatow,JPT_NAZWA_,0,127;JPT_ORGAN_ \"JPT_ORGAN_\" true true false 254 Text 0 0,First,#,A02_Granice_powiatow,JPT_ORGAN_,0,253;JPT_JOR_ID \"JPT_JOR_ID\" true true false 9 Long 0 9,First,#,A02_Granice_powiatow,JPT_JOR_ID,-1,-1;WERSJA_OD \"WERSJA_OD\" true true false 8 Date 0 0,First,#,A02_Granice_powiatow,WERSJA_OD,-1,-1;WERSJA_DO \"WERSJA_DO\" true true false 8 Date 0 0,First,#,A02_Granice_powiatow,WERSJA_DO,-1,-1;WAZNY_OD \"WAZNY_OD\" true true false 8 Date 0 0,First,#,A02_Granice_powiatow,WAZNY_OD,-1,-1;WAZNY_DO \"WAZNY_DO\" true true false 8 Date 0 0,First,#,A02_Granice_powiatow,WAZNY_DO,-1,-1;JPT_KOD__1 \"JPT_KOD__1\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_KOD__1,0,2;JPT_NAZWA1 \"JPT_NAZWA1\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_NAZWA1,0,2;JPT_ORGAN1 \"JPT_ORGAN1\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_ORGAN1,0,2;JPT_WAZNA_ \"JPT_WAZNA_\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_WAZNA_,0,2;ID_BUFORA_ \"ID_BUFORA_\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,ID_BUFORA_,-1,-1;ID_BUFORA1 \"ID_BUFORA1\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,ID_BUFORA1,-1,-1;ID_TECHNIC \"ID_TECHNIC\" true true false 9 Long 0 9,First,#,A02_Granice_powiatow,ID_TECHNIC,-1,-1;IIP_PRZEST \"IIP_PRZEST\" true true false 20 Text 0 0,First,#,A02_Granice_powiatow,IIP_PRZEST,0,19;IIP_IDENTY \"IIP_IDENTY\" true true false 128 Text 0 0,First,#,A02_Granice_powiatow,IIP_IDENTY,0,127;IIP_WERSJA \"IIP_WERSJA\" true true false 32 Text 0 0,First,#,A02_Granice_powiatow,IIP_WERSJA,0,31;JPT_KJ_IIP \"JPT_KJ_IIP\" true true false 20 Text 0 0,First,#,A02_Granice_powiatow,JPT_KJ_IIP,0,19;JPT_KJ_I_1 \"JPT_KJ_I_1\" true true false 128 Text 0 0,First,#,A02_Granice_powiatow,JPT_KJ_I_1,0,127;JPT_KJ_I_2 \"JPT_KJ_I_2\" true true false 32 Text 0 0,First,#,A02_Granice_powiatow,JPT_KJ_I_2,0,31;JPT_OPIS \"JPT_OPIS\" true true false 254 Text 0 0,First,#,A02_Granice_powiatow,JPT_OPIS,0,253;JPT_SPS_KO \"JPT_SPS_KO\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_SPS_KO,0,2;ID_BUFOR_1 \"ID_BUFOR_1\" true true false 9 Long 0 9,First,#,A02_Granice_powiatow,ID_BUFOR_1,-1,-1;JPT_ID \"JPT_ID\" true true false 9 Long 0 9,First,#,A02_Granice_powiatow,JPT_ID,-1,-1;JPT_POWI_1 \"JPT_POWI_1\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,JPT_POWI_1,-1,-1;JPT_KJ_I_3 \"JPT_KJ_I_3\" true true false 3 Text 0 0,First,#,A02_Granice_powiatow,JPT_KJ_I_3,0,2;JPT_GEOMET \"JPT_GEOMET\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,JPT_GEOMET,-1,-1;JPT_GEOM_1 \"JPT_GEOM_1\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,JPT_GEOM_1,-1,-1;Shape_Le_1 \"Shape_Le_1\" true true false 19 Double 0 0,First,#,A02_Granice_powiatow,Shape_Le_1,-1,-1;REGON \"REGON\" true true false 254 Text 0 0,First,#,A02_Granice_powiatow,REGON,0,253")
    #Połączenie narzędziem Dissolve tak aby warstwa miała jeden rekord (przyda się później przy rasteryzacji warstw poligonowych)
    granice_powiatu_diss = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_diss"
    arcpy.management.Dissolve(in_features=granice_powiatu_opolskiego_i_opole, out_feature_class=granice_powiatu_diss)

    #Opracowanie warstwy rastrowej pozwalającej na identyfikację obszarów na których pokrycie terenu umożliwia stworzenie farmy paneli słonecznych
    #Połączenie wszystkich warstw pokrycia terenu pobranych z BDOT-a
    pokrycie_terenu = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu"
    arcpy.management.Merge(inputs=[PL_PZGiK_1833_BDOT10k_16_OT_PTGN_A, PL_PZGiK_1833_BDOT10k_16_OT_PTKM_A, PL_PZGiK_1833_BDOT10k_16_OT_PTLZ_A, PL_PZGiK_1833_BDOT10k_16_OT_PTNZ_A, PL_PZGiK_1833_BDOT10k_16_OT_PTPL_A, PL_PZGiK_1833_BDOT10k_16_OT_PTRK_A, PL_PZGiK_1833_BDOT10k_16_OT_PTSO_A, PL_PZGiK_1833_BDOT10k_16_OT_PTTR_A, PL_PZGiK_1833_BDOT10k_16_OT_PTUT_A, PL_PZGiK_1833_BDOT10k_16_OT_PTWP_A, PL_PZGiK_1833_BDOT10k_16_OT_PTWZ_A, PL_PZGiK_1833_BDOT10k_16_OT_PTZB_A], output=pokrycie_terenu, field_mappings="TERYT \"TERYT\" true true false 4 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,TERYT,0,3,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,TERYT,0,3;LOKALNYID \"LOKALNYID\" true true false 50 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,LOKALNYID,0,49,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,LOKALNYID,0,49;PRZES_NAZW \"PRZES_NAZW\" true true false 25 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,PRZES_NAZW,0,24,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,PRZES_NAZW,0,24;WERSJA \"WERSJA\" true true false 21 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,WERSJA,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,WERSJA,0,20;POCZ_WERSJ \"POCZ_WERSJ\" true true false 21 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,POCZ_WERSJ,0,20,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,POCZ_WERSJ,0,20;OZNA_ZMIAN \"OZNA_ZMIAN\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,OZNA_ZMIAN,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,OZNA_ZMIAN,0,253;ZRO_DANYCH \"ZRO_DANYCH\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,ZRO_DANYCH,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,ZRO_DANYCH,0,253;KAT_ISTNIE \"KAT_ISTNIE\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,KAT_ISTNIE,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,KAT_ISTNIE,0,253;UWAGI \"UWAGI\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,UWAGI,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,UWAGI,0,253;INFO_DODAT \"INFO_DODAT\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,INFO_DODAT,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,INFO_DODAT,0,253;KOD10K \"KOD10K\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,KOD10K,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,KOD10K,0,253;SKROT_KART \"SKROT_KART\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTKM_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,SKROT_KART,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,SKROT_KART,0,253;RODZAJ \"RODZAJ\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTNZ_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTTR_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,RODZAJ,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,RODZAJ,0,253;BDOT500 \"BDOT500\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTGN_A,BDOT500,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,BDOT500,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,BDOT500,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTRK_A,BDOT500,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTUT_A,BDOT500,0,253,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,BDOT500,0,253;KATEGORIA \"KATEGORIA\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTLZ_A,KATEGORIA,0,253;MATE_NAWIE \"MATE_NAWIE\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,MATE_NAWIE,0,253;IDULIC \"IDULIC\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,IDULIC,0,253;IDSIMC \"IDSIMC\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,IDSIMC,0,253;PLAC_CECHA \"PLAC_CECHA\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,PLAC_CECHA,0,253;PLAC_NAZ_1 \"PLAC_NAZ_1\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,PLAC_NAZ_1,0,253;PLAC_NAZ_2 \"PLAC_NAZ_2\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,PLAC_NAZ_2,0,253;AKCEPTACJA \"AKCEPTACJA\" true true false 31 Double 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTPL_A,AKCEPTACJA,-1,-1;GEOMETRIA \"GEOMETRIA\" true true false 200 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTSO_A,GEOMETRIA,0,199;IDMPHP \"IDMPHP\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,IDMPHP,0,253;NAZWA \"NAZWA\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,NAZWA,0,253;IDPRNG \"IDPRNG\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTWP_A,IDPRNG,0,253;SUROWIEC \"SUROWIEC\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTWZ_A,SUROWIEC,0,253;CHARAKTER \"CHARAKTER\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,CHARAKTER,0,253;ROSLINNOSC \"ROSLINNOSC\" true true false 254 Text 0 0,First,#,PL.PZGiK.1833.BDOT10k.16__OT_PTZB_A,ROSLINNOSC,0,253")
    #Wyselekcjonowanie rekordów z pokryciem terenu umożliwiającym budowę farmy
    pokrycie_terenu_Select = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select"
    arcpy.analysis.Select(in_features=pokrycie_terenu, out_feature_class=pokrycie_terenu_Select, where_clause="RODZAJ = 'teren kamienisty' Or RODZAJ = 'teren piaszczysty lub żwirowy' Or RODZAJ = 'krzewy' Or RODZAJ = 'roślinność trawiasta' Or RODZAJ = 'pozostałe grunty nieużytkowane'")
    #Wyeksportowanie wyselkcjowanych wcześniej rekordów do nowej warstwy
    pokrycie_pozwalajace_na_bud = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_pozwalajace_na_bud"
    arcpy.conversion.ExportFeatures(in_features=pokrycie_terenu_Select, out_features=pokrycie_pozwalajace_na_bud, field_mapping="TERYT \"TERYT\" true true false 4 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,TERYT,0,3;LOKALNYID \"LOKALNYID\" true true false 50 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,LOKALNYID,0,49;PRZES_NAZW \"PRZES_NAZW\" true true false 25 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,PRZES_NAZW,0,24;WERSJA \"WERSJA\" true true false 21 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,WERSJA,0,20;POCZ_WERSJ \"POCZ_WERSJ\" true true false 21 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,POCZ_WERSJ,0,20;OZNA_ZMIAN \"OZNA_ZMIAN\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,OZNA_ZMIAN,0,253;ZRO_DANYCH \"ZRO_DANYCH\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,ZRO_DANYCH,0,253;KAT_ISTNIE \"KAT_ISTNIE\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,KAT_ISTNIE,0,253;UWAGI \"UWAGI\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,UWAGI,0,253;INFO_DODAT \"INFO_DODAT\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,INFO_DODAT,0,253;KOD10K \"KOD10K\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,KOD10K,0,253;SKROT_KART \"SKROT_KART\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,SKROT_KART,0,253;RODZAJ \"RODZAJ\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,RODZAJ,0,253;BDOT500 \"BDOT500\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,BDOT500,0,253;KATEGORIA \"KATEGORIA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,KATEGORIA,0,253;MATE_NAWIE \"MATE_NAWIE\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,MATE_NAWIE,0,253;IDULIC \"IDULIC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,IDULIC,0,253;IDSIMC \"IDSIMC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,IDSIMC,0,253;PLAC_CECHA \"PLAC_CECHA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,PLAC_CECHA,0,253;PLAC_NAZ_1 \"PLAC_NAZ_1\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,PLAC_NAZ_1,0,253;PLAC_NAZ_2 \"PLAC_NAZ_2\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,PLAC_NAZ_2,0,253;AKCEPTACJA \"AKCEPTACJA\" true true false 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,AKCEPTACJA,-1,-1;GEOMETRIA \"GEOMETRIA\" true true false 200 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,GEOMETRIA,0,199;IDMPHP \"IDMPHP\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,IDMPHP,0,253;NAZWA \"NAZWA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,NAZWA,0,253;IDPRNG \"IDPRNG\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,IDPRNG,0,253;SUROWIEC \"SUROWIEC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,SUROWIEC,0,253;CHARAKTER \"CHARAKTER\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,CHARAKTER,0,253;ROSLINNOSC \"ROSLINNOSC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,ROSLINNOSC,0,253;Shape_Length \"Shape_Length\" true true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,Shape_length,-1,-1;Shape_Area \"Shape_Area\" true true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_terenu_Select,Shape_area,-1,-1")
    #Połączenie rekordów warstwy w jeden narzędziem PairwiseDissolve ponieważ zwykły Dissolve nie dał oczekiwanych wyników
    pokrycie_dobre_diss = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss"
    arcpy.analysis.PairwiseDissolve(in_features=pokrycie_pozwalajace_na_bud, out_feature_class=pokrycie_dobre_diss)
    #Przycięcie utworzonej warstwy do granic analizowanego obszaru
    pokrycie_dobre_clip = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_clip"
    arcpy.analysis.Clip(in_features=pokrycie_dobre_diss, clip_features=granice_powiatu_diss, out_feature_class=pokrycie_dobre_clip)
    #Połączenie z warstwą reprezentujacą granice obszaru w celu utworzenia na jego podstawie rastra
    pokrycie_dobre_diss_merg = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss_merg"
    arcpy.management.Merge(inputs=[granice_powiatu_diss, pokrycie_dobre_clip], output=pokrycie_dobre_diss_merg, field_mappings="Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_diss,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss_Clip,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss_Clip,Shape_length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_diss,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss_Clip,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_dobre_diss_Clip,Shape_area,-1,-1")
    #Utworzenie w tabeli atrybutów kolumny na podstawie której będzie tworzony raster
    pokrycie_dobre_diss_merg_2_ = arcpy.management.AddField(in_table=pokrycie_dobre_diss_merg, field_name="wart", field_type="SHORT")[0]
    #Wybranie rekordu reprezentującego cały obszar poza tymi w których można budować i nadanie mu wartości 0 - czyli w rozumieniu logicznym fałszu - dzięki czemu można będzie przemnożyć wszystkie warstwy rastrowe aby uzyskać obszar spełniający wszystkie kryteria 
    pokrycie_dobre_diss_merg_Lay, Count = arcpy.management.SelectLayerByAttribute(in_layer_or_view=pokrycie_dobre_diss_merg_2_, where_clause="OBJECTID = 1")
    pokrycie_dobre_diss_merg_Lay_3_ = arcpy.management.CalculateField(in_table=pokrycie_dobre_diss_merg_Lay, field="wart", expression="0")[0]
    #Wybranie rekordu reprezentującego obszary w których można taką farmę zbudować dzięki a także nadanie wartości 1, na końcu wyczyszczenie selekcji
    if pokrycie_dobre_diss_merg_Lay_3_:
        pokrycie_dobre_diss_merg_Lay_5_, Count_2_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=pokrycie_dobre_diss_merg_2_, where_clause="OBJECTID = 2")
        pokrycie_dobre_diss_merg_Lay11 = arcpy.management.CalculateField(in_table=pokrycie_dobre_diss_merg_Lay_5_, field="wart", expression="1")[0]
        pokrycie_dobre_diss_merg_Lay_4_, Count_3_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=pokrycie_dobre_diss_merg_Lay11, selection_type="CLEAR_SELECTION")
    #Na koniec utworzenie warstwy rastrowej po polu wart, gdzie wartości 0 reprezentują obszary niespełniające naszego kryterium, a 1 spełniające
    pokrycie_raster = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\pokrycie_raster"
    if pokrycie_dobre_diss_merg_Lay_3_:
        arcpy.conversion.PolygonToRaster(in_features=pokrycie_dobre_diss_merg_Lay_4_, value_field="wart", out_rasterdataset=pokrycie_raster, priority_field="wart", build_rat="BUILD")

    #Przygotowanie warstwy rastrowej reprezentującej obszary w odległości 500m od obszarów mieszkalnych
    #Wybranie z warstwy pokrycia terenu (opracowanej wcześniej) tylko rekordów które przedstawiają tereny 
    budynki_mieszkalne = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne"
    arcpy.analysis.Select(in_features=pokrycie_terenu, out_feature_class=budynki_mieszkalne, where_clause="RODZAJ = 'jednorodzinna' Or RODZAJ = 'wielorodzinna'")
    #Wyeksportowanie wyselekcjonowanych rekordów do nowej warstwy
    budynki_mieszkalne_Export = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne_Export"
    arcpy.conversion.ExportFeatures(in_features=budynki_mieszkalne, out_features=budynki_mieszkalne_Export, field_mapping="TERYT \"TERYT\" true true false 4 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,TERYT,0,3;LOKALNYID \"LOKALNYID\" true true false 50 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,LOKALNYID,0,49;PRZES_NAZW \"PRZES_NAZW\" true true false 25 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,PRZES_NAZW,0,24;WERSJA \"WERSJA\" true true false 21 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,WERSJA,0,20;POCZ_WERSJ \"POCZ_WERSJ\" true true false 21 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,POCZ_WERSJ,0,20;OZNA_ZMIAN \"OZNA_ZMIAN\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,OZNA_ZMIAN,0,253;ZRO_DANYCH \"ZRO_DANYCH\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,ZRO_DANYCH,0,253;KAT_ISTNIE \"KAT_ISTNIE\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,KAT_ISTNIE,0,253;UWAGI \"UWAGI\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,UWAGI,0,253;INFO_DODAT \"INFO_DODAT\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,INFO_DODAT,0,253;KOD10K \"KOD10K\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,KOD10K,0,253;SKROT_KART \"SKROT_KART\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,SKROT_KART,0,253;RODZAJ \"RODZAJ\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,RODZAJ,0,253;BDOT500 \"BDOT500\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,BDOT500,0,253;KATEGORIA \"KATEGORIA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,KATEGORIA,0,253;MATE_NAWIE \"MATE_NAWIE\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,MATE_NAWIE,0,253;IDULIC \"IDULIC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,IDULIC,0,253;IDSIMC \"IDSIMC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,IDSIMC,0,253;PLAC_CECHA \"PLAC_CECHA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,PLAC_CECHA,0,253;PLAC_NAZ_1 \"PLAC_NAZ_1\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,PLAC_NAZ_1,0,253;PLAC_NAZ_2 \"PLAC_NAZ_2\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,PLAC_NAZ_2,0,253;AKCEPTACJA \"AKCEPTACJA\" true true false 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,AKCEPTACJA,-1,-1;GEOMETRIA \"GEOMETRIA\" true true false 200 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,GEOMETRIA,0,199;IDMPHP \"IDMPHP\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,IDMPHP,0,253;NAZWA \"NAZWA\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,NAZWA,0,253;IDPRNG \"IDPRNG\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,IDPRNG,0,253;SUROWIEC \"SUROWIEC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,SUROWIEC,0,253;CHARAKTER \"CHARAKTER\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,CHARAKTER,0,253;ROSLINNOSC \"ROSLINNOSC\" true true false 254 Text 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,ROSLINNOSC,0,253;Shape_Length \"Shape_Length\" true true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,Shape_length,-1,-1;Shape_Area \"Shape_Area\" true true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne,Shape_area,-1,-1")
    #Utworzenie bufora w odległości 500m (0,5 km), od obszarów mieszkalnych
    budynki_mieszkalne_500m = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszkalne_500m"
    arcpy.analysis.Buffer(in_features=budynki_mieszkalne_Export, out_feature_class=budynki_mieszkalne_500m, buffer_distance_or_field="500 Meters")
    #Połączenie rekordów w jeden
    budynki_mieszk_diss = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_diss"
    arcpy.analysis.PairwiseDissolve(in_features=budynki_mieszkalne_500m, out_feature_class=budynki_mieszk_diss)
    #Przycięcie do granic analizowanego obszaru
    budynki_mieszk_clip = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_clip"
    arcpy.analysis.Clip(in_features=budynki_mieszk_diss, clip_features=granice_powiatu_diss, out_feature_class=budynki_mieszk_clip)
    #Połączenie z granicami obszaru w celu zrobienia warstwy rastrowej
    budynki_pow_merg = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_pow_merg"
    arcpy.management.Merge(inputs=[granice_powiatu_diss, budynki_mieszk_clip], output=budynki_pow_merg, field_mappings="Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_diss,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_diss_Clip,Shape_Length,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_diss_Clip,Shape_length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\granice_powiatu_diss,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_diss_Clip,Shape_Area,-1,-1,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_mieszk_diss_Clip,Shape_area,-1,-1")
    #Ponowne uporządkowanie tabeli nadanie atrybutom spełniającym kryterium (dalej niż 500m od stref mieszkalnych) wartości 1, natomiast tym niespełniającym 0 oczywiście w nowo utworzonej w warstwie kolumnie
    budynki_pow_merg_2_ = arcpy.management.AddField(in_table=budynki_pow_merg, field_name="wart", field_type="SHORT")[0]
    budynki_pow_merg_Layer_2_, Count_4_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=budynki_pow_merg_2_, where_clause="OBJECTID = 2")
    budynki_pow_merg_Layer_3_ = arcpy.management.CalculateField(in_table=budynki_pow_merg_Layer_2_, field="wart", expression="0")[0]
    if budynki_pow_merg_Layer_3_:
        budynki_pow_merg_Layer, Count_5_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=budynki_pow_merg_2_, where_clause="OBJECTID = 1")
        budynki_pow_merg_Layer_4_ = arcpy.management.CalculateField(in_table=budynki_pow_merg_Layer, field="wart", expression="1")[0]
        budynki_pow_merg_Layer_5_, Count_6_ = arcpy.management.SelectLayerByAttribute(in_layer_or_view=budynki_pow_merg_Layer_4_, selection_type="CLEAR_SELECTION")
    #Utworzenie warstwy rastrowej z przygotowanej warstwy poligonowej
    budynki_raster = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\budynki_raster"
    if budynki_pow_merg_Layer_3_:
        arcpy.conversion.PolygonToRaster(in_features=budynki_pow_merg_Layer_5_, value_field="wart", out_rasterdataset=budynki_raster, cell_assignment="CELL_CENTER", priority_field="NONE", cellsize="0.01", build_rat="BUILD")


    #Przycięcie warstwy NMT do granic analizowanego obszaru
    opole_opolski_raster = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\opole_opolski_raster"
    Extract_by_Mask_2_ = opole_opolski_raster
    opole_opolski_raster = arcpy.sa.ExtractByMask(opole_tif, granice_powiatu_diss, "INSIDE", "391262.726733943 293117.50012207 454678.819840335 345708.863695685 PROJCS[\"ETRF2000-PL_CS92\",GEOGCS[\"ETRF2000-PL\",DATUM[\"ETRF2000_Poland\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",-5300000.0],PARAMETER[\"Central_Meridian\",19.0],PARAMETER[\"Scale_Factor\",0.9993],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]]")
    opole_opolski_raster.save(Extract_by_Mask_2_)

    #Proces stworzenia rastra gwarantującego tereny płaskie, czyli nachylenie do 3 stopni
    #Utworzenie warstwy reprezentujacej nachylenia
    Slope_raster = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\Slope_raster"
    Slope = Slope_raster
    Slope_raster = arcpy.sa.Slope(opole_opolski_raster, "DEGREE", 1, "PLANAR", "METER", "GPU_THEN_CPU")
    Slope_raster.save(Slope)
    #Wykorzystanie narzędzia reclassify aby nadać terenom spełniającym kryterium wartość 1 pozostałym wartość 0
    slope_reclassify = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\slope_reclassify"
    Reclassify_2_ = slope_reclassify
    slope_reclassify = arcpy.sa.Reclassify(Slope_raster, "VALUE", "0 3 1;3 70.565811 0", "DATA")
    slope_reclassify.save(Reclassify_2_)

    #Proces utworzenia rastra gwarantującego tereny o stokach południowych (czyli SE,S,SW)
    #Utworzenie rasstra prezentującego ekspozycję stoków
    Aspect_raster = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\Aspect_raster"
    Aspect = Aspect_raster
    Aspect_raster = arcpy.sa.Aspect(opole_opolski_raster, "PLANAR", "METER", "GEODESIC_AZIMUTHS", "GPU_THEN_CPU")
    Aspect_raster.save(Aspect)
    #Zmiana wartości na te odpowiadające i nieodpowiadające przyjętym kryteriom
    reclass_aspect = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\reclass_aspect"
    Reclassify = reclass_aspect
    reclass_aspect = arcpy.sa.Reclassify(Aspect_raster, "VALUE", "-1 112.500000 0;112.500000 247.500000 1;247.500000 359.999969 0", "DATA")
    reclass_aspect.save(Reclassify)

    #Utworzenie rastra reprezentującego odpowiednie wartości temperatury powierzchni 
    #Zmiana wartości 1 rastra pokrywającego analizowany obszar do wartości temperatury powierzchni wyrażonej w stopniach (wartości w równaniu pozyskane z metadanych pobranego pliku)
    lewa_strona_popr_wartosci = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\lewa_strona_popr_wartosci"
    Raster_Calculator = lewa_strona_popr_wartosci
    lewa_strona_popr_wartosci =  LC08_L2SP_190025_20240920_20240927_02_T1_ST_B10_TIF *0.00341802+149.0-273.15
    lewa_strona_popr_wartosci.save(Raster_Calculator)
    #Zmiana wartości 2 rastra pokrywającego analizowany obszar do wartości temperatury powierzchni wyrażonej w stopniach (wartości w równaniu pozyskane z metadanych pobranego pliku)
    prawa_strona_popr_wartosci = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\prawa_strona_popr_wartosci"
    Raster_Calculator_2_ = prawa_strona_popr_wartosci
    prawa_strona_popr_wartosci =  LC08_L2SP_189025_20241202_20241209_02_T1_ST_B10_TIF *0.00341802+149.0-273.15
    prawa_strona_popr_wartosci.save(Raster_Calculator_2_)
    #Połączenie tak przygotowanych rastrów w jeden
    polaczone_temperatura_2180 = arcpy.management.MosaicToNewRaster(input_rasters=[lewa_strona_popr_wartosci, prawa_strona_popr_wartosci], output_location=ProgramowanieGIS_gdb, raster_dataset_name_with_extension="polaczone_temperatura_2180", coordinate_system_for_the_raster="GEOGCS[\"GCS_ETRS_1989\",DATUM[\"D_ETRS_1989\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]", pixel_type="16_BIT_UNSIGNED", number_of_bands=1)[0]
    polaczone_temperatura_2180 = arcpy.Raster(polaczone_temperatura_2180)
    #Przycięcie do zasięgu obszaru
    temperatura_powiaty = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\temperatura_powiaty"
    Extract_by_Mask_3_ = temperatura_powiaty
    temperatura_powiaty = arcpy.sa.ExtractByMask(polaczone_temperatura_2180, granice_powiatu_diss, "INSIDE", "17.4662352543535 50.5016724115526 18.3543645351952 50.9681578264226 GEOGCS[\"GCS_ETRS_1989\",DATUM[\"D_ETRS_1989\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]]")
    temperatura_powiaty.save(Extract_by_Mask_3_)
    #Zmiana wartości narzędziem reclassify wartości 1 - warunek od 10 do 35 stopni (najbardziej optymalne dla farmy paneli słonecznych), 0 dla niespełniających
    temp_reclass = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\temp_reclass"
    Reclassify_3_ = temp_reclass
    temp_reclass = arcpy.sa.Reclassify(temperatura_powiaty, "Value", "0 10 0;10 35 1;35 40 0", "DATA")
    temp_reclass.save(Reclassify_3_)


    #Wyodrębnienie obszarów spełniających wszystkie poruszone do tej pory kryteria
    #Dzięki tak przygotowanym rastrom wystarczy przemnożyć wszystkie rastry przez siebie i jeśli wyjdzie 1 (to znaczy że wszystkie rastry musiały dać jeden, czyli wszystkie warunki są spełnione)
    raster_wynikowy = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\raster_wynikowy"
    Raster_Calculator_3_ = raster_wynikowy
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        raster_wynikowy =  slope_reclassify* temp_reclass* reclass_aspect* pokrycie_raster* budynki_raster
        raster_wynikowy.save(Raster_Calculator_3_)
    #Następnym krokiem jest zmiana warstwy na poligon w celu obliczenia minimalnej powierzchni wykazanych obszarów
    potencjalne_miejsca_shp = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsca_shp"
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        with arcpy.EnvManager(outputMFlag="Disabled", outputZFlag="Disabled"):
            arcpy.conversion.RasterToPolygon(in_raster=raster_wynikowy, out_polygon_features=potencjalne_miejsca_shp, simplify="NO_SIMPLIFY")
    #Export do nowej warstwy tylko rekordów które spełniły wszystkie dotychczasowe kryteria (czyli gridcode = 1)
    miejsca_shp = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\miejsca_shp"
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        arcpy.conversion.ExportFeatures(in_features=potencjalne_miejsca_shp, out_features=miejsca_shp, where_clause="gridcode = 1", field_mapping="Shape_Length \"Shape_Length\" false false true 0 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsca_shp,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false false true 0 Double 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsca_shp,Shape_Area,-1,-1;ID \"ID\" true true false 0 Long 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsca_shp,ID,-1,-1;GRIDCODE \"GRIDCODE\" true true false 0 Long 0 0,First,#,E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsca_shp,GRIDCODE,-1,-1")

    #Obliczenie powierzchni wskazanych obszarów
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        miejsca_shp_3_ = arcpy.management.CalculateGeometryAttributes(in_features=miejsca_shp, geometry_property=[["pow", "AREA"]], area_unit="SQUARE_KILOMETERS", coordinate_system="PROJCS[\"ETRF2000-PL_CS92\",GEOGCS[\"ETRF2000-PL\",DATUM[\"ETRF2000_Poland\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",-5300000.0],PARAMETER[\"Central_Meridian\",19.0],PARAMETER[\"Scale_Factor\",0.9993],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]]")[0]
    #Utworzenie buffora 500 metrów od linii energetycznych
    linia_elektroenergety_Buffer = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\linia_elektroenergety_Buffer"
    arcpy.analysis.Buffer(in_features=linia_elektroenergetyczna_wysokiego_napiecia, out_feature_class=linia_elektroenergety_Buffer, buffer_distance_or_field="500 Meters")
    #Wyselekcjowanie tylko tych terenów które są nie dalej niż 500 m od linii wysokiego napięcia narzędziem select by localization i metodą intersect
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        Layer_With_Selection, Output_Layer_Names, Count_7_ = arcpy.management.SelectLayerByLocation(in_layer=[miejsca_shp_3_], select_features=linia_elektroenergety_Buffer)
    #Zapis ostatecznej warstwy do nowej warstwy
    potencjalne_miejsce_farmy_paneli = "E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb\\potencjalne_miejsce_farmy_paneli"
    if budynki_pow_merg_Layer_3_ and pokrycie_dobre_diss_merg_Lay_3_:
        arcpy.conversion.ExportFeatures(in_features=Layer_With_Selection, out_features=potencjalne_miejsce_farmy_paneli, field_mapping="ID \"ID\" true true false 4 Long 0 0,First,#,miejsca_shp_Layer,ID,-1,-1;GRIDCODE \"GRIDCODE\" true true false 4 Long 0 0,First,#,miejsca_shp_Layer,GRIDCODE,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,miejsca_shp_Layer,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,miejsca_shp_Layer,Shape_Area,-1,-1;pow \"pow\" true true false 8 Double 0 0,First,#,miejsca_shp_Layer,pow,-1,-1")

if __name__ == '__main__':
    with arcpy.EnvManager(scratchWorkspace="E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb", workspace="E:\\ProgramowanieGIS\\projekt_zaliczeniowy\\ProgramowanieGIS\\ProgramowanieGIS.gdb"):
        FunkcjaZaliczenie()
